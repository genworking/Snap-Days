version: 2.1
workflows: # 全体の流れを定義
  your_workflow_name: # ワークフローの名前(任意の名前)
    jobs: # 実行するジョブ(任意の名前)
      - your_job_name

executors: # 各ジョブの初期設定
  working_directory: ~/アプリの名前
  ruby_and_postgres:
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: gen
          RAILS_ENV: test

jobs:
  your_job_name:
    executor: ruby_and_postgres
    steps:
      - checkout
      - bundle-install
      # バンドル キャッシュを復元
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: バンドル インストール
          command: |
            gem install bundler -v 2.2.15
            bundle install
      # バンドル キャッシュを保存
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # Yarn の設定
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: Yarn のインストール
          command: yarn install --cache-folder ~/.cache/yarn
      # Yarn のキャッシュを保存
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      # Rubocopの実行
      - run:
          name: Run Lint
          when: always
          command: bundle exec rubocop
      # DB関連の設定
      - run:
          name: DB起動待機
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create DB
          command: |
            bin/rails db:migrate
            bin/rails db:schema:load --trace
      # テストの実行
      - run:
          name: Run Tests
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: /tmp/test-results

commands:
  bundle-install:
    steps:
      - ruby-orbs/bundle-install:
          bundle_clean: true
          bundle_extra_args: ''
          bundle_gemfile: Gemfile
          bundle_jobs: 4
          bundle_path: vendor/bundle
          bundle_retry: 3
          cache_key_prefix: v1-bundle-dependencies
          restore_bundled_with: true
  preparate:
    steps:
      - checkout
      - bundle-install
